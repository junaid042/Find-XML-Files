<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonXML.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="buttonMore.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAABbpJREFUeF7tm4tvFEUcxy9tReqLoEZAEonRoEaL4IOitSdqRRSRSKkPiA8eAQUj
        CIEEqhFCKIoVkUZ6FPqgNKVptBRaCn0CzVmhVizFPugD/U/W+V5ul5nZuYshJvx29/dLPsndzG+Wmf10
        57EXQhwcHBwcHBwcHBQjI5IWzoiktHqP1NJp5aHx8WH4JzIOpuYJLG+S0jzn+1B6fCj+CDEwDwsBPpMi
        BuUpIdOr7zOU+0iKGJCnhEw+m21NaX/eUOcTKWIwnhOSPrLGv1LEQDwpxLdSxCA8K8SXUsQAPC3Ed1JE
        5z0vxFdSRMd9IQT4QorotG+EAM9LER32lRDgaSmis74TAjwrRXTUl0KAJ6WITvpWCPCcFNFBXwsBnpIi
        Oud7IcAzUkTHAiEEeEKK6FRghADyUkSHAiUEkJYiOhM4IcAopTh1Sfy23LwQHQmkEGCQkhe/LTcv0Amt
        U6R57MgEa3r1pP+NJw6Nk6/PQojBQojBQojBQojBQojBQojBQojBQojBQojBQojBQojBQojBQojBQojB
        QojBQojBQojBQohBW8ja+metf8aKFbY2vezK23Ayy5W3seEFJafmwqeunEsD31gzDqYpeTKF7W+72oDn
        yu5U8l46cq8rJ6vsLiXnP0JbyJMlaVbXle3KQM9d/sqV1/THZiWnZ6DAmlVyq5JjEgLeqJqq5Mm0/LnV
        2CawQsCmxmzXYHOPPejUz6+63/p77IBSn386R7kGSCTE9MSBzNI7rGujPxnbBFrIzJJxVnf/LmWwkc5l
        Tv2+jiVKXd9QoTX78G3KNUAiISjXc8GqulnGfBBoISC/KUcZ7ODwvthNx7TUN/SdUrer5U3jNRIJ6b+6
        V0yNt7jyi869a8wHgRfyzOF0143/oiHLtegPCVGJbkQiIUCeAm06+7425oLACwE7WxYoAz59aYt1vHu9
        Ura3I9fYFuhChkf2O593NL+u5IYrJirrkpwLWIhgjlhkB67+oAz62uj1mzYyUmS9WHG3sS3QhTT2bHI+
        1/++QclddyLTqcOU1tH7pfMdsJA4he2LXQO3kRd6E7qQ3W0Lnc94Ap4+NN7JLen8wKmr6lptRbXpi4XE
        yS6faA0Pq9MHwPZ03tEpxjY2upDlv8xQpqKltY86uRf/2umU49DZ01/gfAcsRAIHQ33w2BbjEGnKt9GF
        rBBCjnd/7nzf07YolpdTOckpw5SI9eSK2ErbZYCFxFkm/or1gdusrnvK2MZGF4IdmrydPiM2CciTD6I4
        qaNsdLTIKQMsJI6+q5Lp6M1P+l5KF4Jt86vS0zAmpr3M0tutyl9XOmUFrQtjB1P7uw0LEeCsIA8Ya8mA
        2AHJZR/+/LixLdCFbGt6JVYuvytbWTfT6h381vmeW/NQbHdnf7dhIYJjFz5RBlwWXW4dOP++UtbQs9HY
        FuhC7LPHj2fznDJsf+3Plwf3xNaluRX3OGU2gReyoGqqcuYA79U+Yi2qnqaUgXdqHjZeQxeyW0xHKMdT
        JZfblEU/jtXPq5zsqgu8kPLoCmWwmGbs9aKtd5tSV3txnas90IVgfUA53ocNDqsHTrC2fnasnoVoYBuK
        BVce7PYz8536LafmKnV45fFW9QPKNUAiIaY6/Hv2Tb9RIXgTgCnQBN4ky+0l6AspPr9UGShulvyKBDsj
        vFSUc452rVKuAZIJ2dwYVupOiZtp192okGQk+g1GQFsIDmX6ybz6tzWuvNLoR0oOTu6vaSf3ZEIgWH6Z
        uKP5+hPIQiQ+O5HpetzlVxw2i8WWWM/DX72cg3dXcv36k+r/EccibtfJP+tCltwO6D+AZZVNcOUkw9NT
        VsBgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRgIcRg
        IcRgIcRgIcRgIcQgICSSFs6IpLQyIC0cvy0cHBwcHBwcHByEIhT6F7QFW9zUgXrSAAAAAElFTkSuQmCC
</value>
  </data>
</root>